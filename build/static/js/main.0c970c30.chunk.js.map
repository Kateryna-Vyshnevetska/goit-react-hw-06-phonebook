{"version":3,"sources":["components/notificationError/NotificationError.js","components/contactForm/ContactForm.js","components/contactList/contactItem/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["NotificationError","content","className","ContactForm","contacts","getContacts","newContact","useState","flag","setFlag","handleChange","target","name","value","CSSTransition","in","classNames","timeout","onEntered","unmountOnExit","onSubmit","ev","preventDefault","reset","undefined","number","map","el","type","placeholder","onChange","ContactItem","id","delItem","onClick","ContactList","filteredItems","getIdForDelete","console","log","TransitionGroup","component","key","Filter","getNamesByFilter","App","state","setState","filterVal","setFilterVal","useEffect","dataFromStorage","localStorage","getItem","JSON","parse","prev","setItem","stringify","filt","filter","toLowerCase","includes","length","appear","uuidv4","newContacts","elem","newFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c970c30.chunk.js","sourcesContent":["import React from \"react\";\nimport '../contactForm/ContactForm.css'\nexport function NotificationError({ content }) {\n  return (\n    <>\n      <div className='notification'>\n        <h3>{content}</h3>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport {CSSTransition } from \"react-transition-group\";\nimport { NotificationError } from \"../notificationError/NotificationError\";\nimport \"./ContactForm.css\";\n\nconst ContactForm = ({ contacts, getContacts }) => {\n  const newContact = {};\n  const [flag, setFlag] = useState(false);\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n    const form = ev.target;\n    form.reset();\n    let flag = true;\n    if (newContact.name === undefined || newContact.number === undefined) {\n      setFlag(true);\n    } else {\n      contacts.map((el) => (el.name === newContact.name ? (flag = false) : \"\"));\n      flag ? getContacts(newContact) : setFlag(true);\n    }\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    newContact[name] = value;\n  };\n\n  return (\n    <>\n      <CSSTransition in={flag} classNames=\"noti\" timeout={750} onEntered={() => setFlag(false)} unmountOnExit>\n        <NotificationError content=\"You have not completed all the fields or the values ​​are repeated\" />\n      </CSSTransition>\n\n      <form onSubmit={handleSubmit}>\n        <label className=\"text\">\n          Name\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"text\">\n          Number\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Enter number\"\n            name=\"number\"\n            onChange={handleChange}\n          />\n        </label>\n        <button className=\"btn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\n\nconst ContactItem = ({name, number, id, delItem}) => {\n const deleteItem =()=>{\n  delItem(id);\n }\n  return(\n    <li className='list__item'>\n      <p className='text'>{name}: {number}</p>\n      <button className='btn' onClick={deleteItem}>delete</button>\n    </li>\n  )\n}\n\nexport default ContactItem;","import React from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport ContactItem from \"./contactItem/ContactItem\";\nimport \"./ContactList.css\";\n\nconst ContactList = ({ filteredItems, getIdForDelete }) => {\n  console.log(filteredItems);\n  const delItem = (id) => {\n    getIdForDelete(id);\n  };\n\n  return (\n    <>\n      <TransitionGroup component=\"ul\" className=\"ContactList\">\n        {filteredItems.map(({ name, number, id }) => (\n          <CSSTransition key={id} timeout={250} classNames=\"ContactItem\">\n            <ContactItem\n              id={id}\n              name={name}\n              number={number}\n              delItem={delItem}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n};\nexport default ContactList;\n","import React from 'react';\n\nconst Filter = ({getNamesByFilter}) => {\n\n  const getValue = ({target: {value}})=> {\n    getNamesByFilter(value)\n  }\n\n  return(\n    <>\n      <h3 className='title'>Find contacts by name</h3>\n      <input className='input' onChange={getValue} type='text' name='filter' placeholder='Enter name'></input>\n    </>\n  )\n}\nexport default Filter;","import React, { useState, useEffect } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Filter from \"./filter/Filter\";\n\nexport default function App() {\n  const [state, setState] = useState({\n    contacts: [],\n    filteredItems: [],\n  });\n  const [filterVal, setFilterVal] = useState(\"\");\n\n  useEffect(() => {\n    const dataFromStorage = localStorage.getItem(\"contacts\");\n    const contacts = JSON.parse(dataFromStorage);\n    if (contacts) {\n      setState((prev) => ({ ...prev, contacts: [...contacts] }));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(state.contacts));\n  }, [state.contacts]);\n\n  useEffect(() => {\n    if (filterVal) {\n      const filt = state.contacts.filter((el) =>\n        el.name.toLowerCase().includes(filterVal.toLowerCase())\n      );\n      if (filt.length > 0) {\n        setState((prev) => ({\n          ...prev,\n          filteredItems: [...filt],\n        }));\n      } else {\n        setState((prev) => ({ ...prev, filteredItems: [] }));\n      }\n    } else {\n      setState((prev) => ({ ...prev, filteredItems: [] }));\n    }\n  }, [filterVal]);\n\n  const getContacts = (newContact) => {\n    newContact[\"id\"] = uuidv4();\n    setState((prev) => ({\n      ...prev,\n      contacts: [newContact, ...prev.contacts],\n    }));\n  };\n\n  const deleteContact = (id) => {\n    const newContacts = state.contacts.filter((elem) => {\n      return elem.id !== id;\n    });\n    const newFilter = state.filteredItems.filter((elem) => {\n      return elem.id !== id;\n    });\n    setState((prev) => ({\n      ...prev,\n      contacts: [...newContacts],\n      filteredItems: [...newFilter],\n    }));\n  };\n\n  const getNamesByFilter = (value) => {\n    setFilterVal(value);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"title-anim\"\n          unmountOnExit\n        >\n          <h1 className=\"title\">Phonebook</h1>\n        </CSSTransition>\n        <ContactForm {...state} getContacts={getContacts} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter getNamesByFilter={getNamesByFilter} />\n        <ContactList\n          filteredItems={\n            state.filteredItems.length > 0 || filterVal\n              ? state.filteredItems\n              : state.contacts\n          }\n          getIdForDelete={deleteContact}\n        />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}