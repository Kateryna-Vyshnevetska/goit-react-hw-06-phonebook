{"version":3,"sources":["components/notificationError/NotificationError.js","redux/types.js","redux/phoneBook/actions.js","components/contactForm/ContactForm.js","components/helpers/checkContact.js","components/contactList/contactItem/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","redux/phoneBook/reducers.js","redux/store.js","index.js"],"names":["NotificationError","content","className","ADD_NEW_CONTACT","DELETE_CONTACT","FILTER_CONTACTS","error","value","type","payload","ContactForm","getContacts","contacts","useSelector","state","dispatch","useDispatch","useState","flag","setFlag","newContact","handleChange","target","name","CSSTransition","in","classNames","timeout","onEntered","unmountOnExit","onSubmit","ev","preventDefault","reset","contact","undefined","number","items","map","el","checkContact","placeholder","onChange","ContactItem","id","delItem","onClick","ContactList","filteredItems","getIdForDelete","TransitionGroup","component","key","Filter","getNamesByFilter","App","filterContactsAction","appear","uuidv4","filter","elem","toLowerCase","includes","deleteContactAction","initialState","persistConfig","storage","rootReducer","combineReducers","errors","persistedReducer","persistReducer","store","createStore","devToolsEnhancer","persistStore","ReactDOM","render","document","getElementById"],"mappings":"kUAEO,SAASA,EAAT,GAAyC,IAAZC,EAAW,EAAXA,QAClC,OACE,oCACE,yBAAKC,UAAU,gBACb,4BAAKD,KCNN,IAAME,EAAkB,4BAClBC,EAAiB,2BACjBC,EAAkB,4BCoBlBC,EAAQ,SAACC,GAAD,MAAY,CAC/BC,KDpB2B,uBCqB3BC,QAASF,IC4CIG,EA7DK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACbC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAA1CA,SACFG,EAAWC,cAFsB,EAGfC,oBAAS,GAHM,mBAGhCC,EAHgC,KAG1BC,EAH0B,KAKjCC,EAAa,GAWbC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMhB,EAAc,EAAdA,MACtCa,EAAWG,GAAQhB,GAGrB,OACE,oCACE,kBAACiB,EAAA,EAAD,CACEC,GAAIP,EACJQ,WAAW,OACXC,QAAS,IACTC,UAAW,kBAAMT,GAAQ,IACzBU,eAAa,GAEb,kBAAC7B,EAAD,CAAmBC,QAAQ,kFAG7B,0BAAM6B,SAzBW,SAACC,GACpBA,EAAGC,iBACUD,EAAGT,OACXW,QCfmB,SAACC,EAAStB,EAAUG,GAC9C,IAAIG,GAAO,EAEX,YAAqBiB,IAAjBD,EAAQX,WAAyCY,IAAnBD,EAAQE,QACxCrB,EAAST,EAAM,+BACR,IAEPM,EAASyB,MAAMC,KAAI,SAACC,GAAD,OACjBA,EAAGhB,OAASW,EAAQX,KAAQL,GAAO,EAAS,QAE1CA,IAGFH,EAAST,EAAM,iCACR,IDGIkC,CAAapB,EAAYR,EAAUG,GACzCJ,EAAYS,GAAcD,GAAQ,KAoBrC,2BAAOjB,UAAU,QAAjB,OAEE,2BACEA,UAAU,QACVM,KAAK,OACLiC,YAAY,aACZlB,KAAK,OACLmB,SAAUrB,KAGd,2BAAOnB,UAAU,QAAjB,SAEE,2BACEA,UAAU,QACVM,KAAK,OACLiC,YAAY,eACZlB,KAAK,SACLmB,SAAUrB,KAGd,4BAAQnB,UAAU,MAAMM,KAAK,UAA7B,kB,QE9COmC,EAZK,SAAC,GAAiC,IAAhCpB,EAA+B,EAA/BA,KAAMa,EAAyB,EAAzBA,OAAQQ,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,QAItC,OACE,wBAAI3C,UAAU,cACZ,uBAAGA,UAAU,QAAQqB,EAArB,KAA6Ba,GAC7B,4BAAQlC,UAAU,MAAM4C,QANX,WACjBD,EAAQD,KAKJ,YCkBSG,G,MAtBK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eAC9BJ,EAAU,SAACD,GACfK,EAAeL,IAGjB,OACE,oCACE,kBAACM,EAAA,EAAD,CAAiBC,UAAU,KAAKjD,UAAU,eACvC8C,EAAcV,KAAI,gBAAGf,EAAH,EAAGA,KAAMa,EAAT,EAASA,OAAQQ,EAAjB,EAAiBA,GAAjB,OACjB,kBAACpB,EAAA,EAAD,CAAe4B,IAAKR,EAAIjB,QAAS,IAAKD,WAAW,eAC/C,kBAAC,EAAD,CACEkB,GAAIA,EACJrB,KAAMA,EACNa,OAAQA,EACRS,QAASA,Y,QCHRQ,EAdA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAChB,OACE,oCACE,wBAAIpD,UAAU,SAAd,yBACA,2BACEA,UAAU,QACVwC,SAAUY,EACV9C,KAAK,OACLe,KAAK,SACLkB,YAAY,iBCEL,SAASc,IAAO,IACrB3C,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAA1CA,SACFG,EAAWC,cAWXsC,EAAmB,SAAC/C,GACxBQ,ENVgC,SAACR,GAAD,MAAY,CAC9CC,KAAMH,EACNI,QAASF,GMQEiD,CAAqBjD,KAGhC,OACE,oCACE,yBAAKL,UAAU,WACb,kBAACsB,EAAA,EAAD,CACEC,IAAI,EACJgC,QAAQ,EACR9B,QAAS,IACTD,WAAW,aACXG,eAAa,GAEb,wBAAI3B,UAAU,SAAd,cAEF,kBAAC,EAAD,CAAaS,YAzBC,SAACS,GACnBA,EAAU,GAASsC,cACnB3C,ENZ0C,CAC5CP,KAAML,EACNM,QMU4BW,OAwBtB,wBAAIlB,UAAU,SAAd,YACA,kBAAC,EAAD,CACEoD,iBAAkB,gBAAa/C,EAAb,EAAGe,OAAUf,MAAb,OAA2B+C,EAAiB/C,MAEhE,kBAAC,EAAD,CACEyC,cACEpC,EAAS+C,OACL/C,EAASyB,MAAMsB,QAAO,SAACC,GAAD,OACpBA,EAAKrC,KACFsC,cACAC,SAASlD,EAAS+C,OAAOE,kBAE9BjD,EAASyB,MAEfY,eAnCc,SAACL,GACrB7B,ENX+B,SAAC6B,GAAD,MAAS,CAC1CpC,KAAMJ,EACNK,QAASmC,GMSEmB,CAAoBnB,S,4DChB3BoB,EAAe,CACnBpD,SAAU,CACRyB,MAAO,GACPsB,OAAQ,KCJNM,EAAgB,CACpBb,IAAK,OACLc,aAIIC,EAAcC,0BAAgB,CAClCxD,SDC8B,WAG1B,IAFJE,EAEG,sEAFUkD,GAEV,yCADDxD,EACC,EADDA,KAAMC,EACL,EADKA,QAER,OAAQD,GACN,KAAKL,EACH,MAAO,CACLS,SAAU,CACR+C,OAAQ,GACRtB,MAAM,GAAD,mBAAMvB,EAAMF,SAASyB,OAArB,CAA4B5B,MAGvC,KAAKL,EACH,MAAO,CACLQ,SAAU,CACR+C,OAAQ,GACRtB,MAAM,YACDvB,EAAMF,SAASyB,MAAMsB,QAAO,SAACC,GAC9B,OAAOA,EAAKhB,KAAOnC,QAK7B,KAAKJ,EACH,MAAO,CACLO,SAAU,CACRyB,MAAM,YAAKvB,EAAMF,SAASyB,OAC1BsB,OAAQlD,IAGd,QACE,OAAOK,IC/BXuD,ODmCoB,WAAoC,IAAnCvD,EAAkC,uDAA1B,GAA0B,yCAApBN,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzC,OAAQD,GACN,IRhDyB,uBQiDvB,OAAOC,EACT,KAAKN,EAEL,KAAKC,EAEL,KAAKC,EACH,MAAO,GACT,QACE,OAAOS,MC3CPwD,EAAmBC,YAAeN,EAAeE,GAE1CK,EAAQC,sBAAYH,EAAkBI,8BACnDC,YAAaH,GCbbI,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAACjB,EAAD,OAEFuB,SAASC,eAAe,W","file":"static/js/main.ddddc868.chunk.js","sourcesContent":["import React from \"react\";\nimport '../contactForm/ContactForm.css'\nexport function NotificationError({ content }) {\n  return (\n    <>\n      <div className='notification'>\n        <h3>{content}</h3>\n      </div>\n    </>\n  );\n}\n","export const ADD_NEW_CONTACT = \"phonebook/ADD_NEW_CONTACT\";\nexport const DELETE_CONTACT = \"phonebook/DELETE_CONTACT\";\nexport const FILTER_CONTACTS = \"phonebook/FILTER_CONTACTS\";\nexport const ERROR_MESSAGE = \"errors/ERROR_MESSAGE\";\n","import {\n  ADD_NEW_CONTACT,\n  DELETE_CONTACT,\n  FILTER_CONTACTS,\n  ERROR_MESSAGE,\n} from \"../types\";\n\nexport const newContactAction = (contact) => ({\n  type: ADD_NEW_CONTACT,\n  payload: contact,\n});\n\nexport const deleteContactAction = (id) => ({\n  type: DELETE_CONTACT,\n  payload: id,\n});\n\nexport const filterContactsAction = (value) => ({\n  type: FILTER_CONTACTS,\n  payload: value,\n});\n\nexport const error = (value) => ({\n  type: ERROR_MESSAGE,\n  payload: value,\n});\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { NotificationError } from \"../notificationError/NotificationError\";\nimport { checkContact } from \"../helpers/checkContact\";\nimport \"./ContactForm.css\";\n\nconst ContactForm = ({ getContacts }) => {\n  const { contacts } = useSelector((state) => state.contacts);\n  const dispatch = useDispatch();\n  const [flag, setFlag] = useState(false);\n\n  const newContact = {};\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n    const form = ev.target;\n    form.reset();\n\n    const flag = checkContact(newContact, contacts, dispatch);\n    flag ? getContacts(newContact) : setFlag(true);\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    newContact[name] = value;\n  };\n\n  return (\n    <>\n      <CSSTransition\n        in={flag}\n        classNames=\"noti\"\n        timeout={750}\n        onEntered={() => setFlag(false)}\n        unmountOnExit\n      >\n        <NotificationError content=\"You have not completed all the fields or the values ​​are repeated\" />\n      </CSSTransition>\n\n      <form onSubmit={handleSubmit}>\n        <label className=\"text\">\n          Name\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            onChange={handleChange}\n          />\n        </label>\n        <label className=\"text\">\n          Number\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Enter number\"\n            name=\"number\"\n            onChange={handleChange}\n          />\n        </label>\n        <button className=\"btn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import { error } from \"../../redux/phoneBook/actions\";\n\nexport const checkContact = (contact, contacts, dispatch) => {\n  let flag = true;\n\n  if (contact.name === undefined || contact.number === undefined) {\n    dispatch(error(\"not all fields are filled\"));\n    return false;\n  } else {\n    contacts.items.map((el) =>\n      el.name === contact.name ? (flag = false) : \"\"\n    );\n    if (flag) {\n      return true;\n    } else {\n      dispatch(error(\"such contact already exists\"));\n      return false;\n    }\n  }\n};\n","import React from 'react';\n\nconst ContactItem = ({name, number, id, delItem}) => {\n const deleteItem =()=>{\n  delItem(id);\n }\n  return(\n    <li className='list__item'>\n      <p className='text'>{name}: {number}</p>\n      <button className='btn' onClick={deleteItem}>delete</button>\n    </li>\n  )\n}\n\nexport default ContactItem;","import React from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport ContactItem from \"./contactItem/ContactItem\";\nimport \"./ContactList.css\";\n\nconst ContactList = ({ filteredItems, getIdForDelete }) => {\n  const delItem = (id) => {\n    getIdForDelete(id);\n  };\n\n  return (\n    <>\n      <TransitionGroup component=\"ul\" className=\"ContactList\">\n        {filteredItems.map(({ name, number, id }) => (\n          <CSSTransition key={id} timeout={250} classNames=\"ContactItem\">\n            <ContactItem\n              id={id}\n              name={name}\n              number={number}\n              delItem={delItem}\n            />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n};\nexport default ContactList;\n","import React from \"react\";\n\nconst Filter = ({ getNamesByFilter }) => {\n  return (\n    <>\n      <h3 className=\"title\">Find contacts by name</h3>\n      <input\n        className=\"input\"\n        onChange={getNamesByFilter}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n      ></input>\n    </>\n  );\n};\nexport default Filter;\n","import React, { useState, useEffect } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Filter from \"./filter/Filter\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  newContactAction,\n  deleteContactAction,\n  filterContactsAction,\n} from \"../redux/phoneBook/actions\";\n\nexport default function App() {\n  const { contacts } = useSelector((state) => state.contacts);\n  const dispatch = useDispatch();\n\n  const getContacts = (newContact) => {\n    newContact[\"id\"] = uuidv4();\n    dispatch(newContactAction(newContact));\n  };\n\n  const deleteContact = (id) => {\n    dispatch(deleteContactAction(id));\n  };\n\n  const getNamesByFilter = (value) => {\n    dispatch(filterContactsAction(value));\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"title-anim\"\n          unmountOnExit\n        >\n          <h1 className=\"title\">Phonebook</h1>\n        </CSSTransition>\n        <ContactForm getContacts={getContacts} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter\n          getNamesByFilter={({ target: { value } }) => getNamesByFilter(value)}\n        />\n        <ContactList\n          filteredItems={\n            contacts.filter\n              ? contacts.items.filter((elem) =>\n                  elem.name\n                    .toLowerCase()\n                    .includes(contacts.filter.toLowerCase())\n                )\n              : contacts.items\n          }\n          getIdForDelete={deleteContact}\n        />\n      </div>\n    </>\n  );\n}\n","import {\n  ADD_NEW_CONTACT,\n  DELETE_CONTACT,\n  FILTER_CONTACTS,\n  ERROR_MESSAGE,\n} from \"../types\";\n\nconst initialState = {\n  contacts: {\n    items: [],\n    filter: \"\",\n  },\n};\n\nexport const phoneBookReducer = (\n  state = { ...initialState },\n  { type, payload }\n) => {\n  switch (type) {\n    case ADD_NEW_CONTACT:\n      return {\n        contacts: {\n          filter: \"\",\n          items: [...state.contacts.items, payload],\n        },\n      };\n    case DELETE_CONTACT:\n      return {\n        contacts: {\n          filter: \"\",\n          items: [\n            ...state.contacts.items.filter((elem) => {\n              return elem.id !== payload;\n            }),\n          ],\n        },\n      };\n    case FILTER_CONTACTS:\n      return {\n        contacts: {\n          items: [...state.contacts.items],\n          filter: payload,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport const errors = (state = \"\", { type, payload }) => {\n  switch (type) {\n    case ERROR_MESSAGE:\n      return payload;\n    case ADD_NEW_CONTACT:\n      return \"\";\n    case DELETE_CONTACT:\n      return \"\";\n    case FILTER_CONTACTS:\n      return \"\";\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { phoneBookReducer, errors } from \"./phoneBook/reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  // blacklist: [\"error\"],\n};\n\nconst rootReducer = combineReducers({\n  contacts: phoneBookReducer,\n  errors: errors,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(persistedReducer, devToolsEnhancer());\npersistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}